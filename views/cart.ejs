<html lang="en">
<head>
    <title>Cart - FoodExpress</title>
    <link href="https://cdn.jsdelivr.net/npm/fastbootstrap@2.2.0/dist/css/fastbootstrap.min.css" rel="stylesheet" integrity="sha256-V6lu+OdYNKTKTsVFBuQsyIlDiRWiOmtC8VQ8Lzdm2i4=" crossorigin="anonymous">
    <link rel="icon" href="/icons8-deliver-food-96.png">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/js/all.min.js" integrity="sha512-dGk3EJL6zKjzYBDt4CeT/O4GkAEtIWaC+eLJF1JXTN4fMYxZKfKl2qlTO8+qKxJBc1+ZG+OqXtJnHPEgyNIKKg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Playwrite+CU:wght@100..400&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: "Roboto", sans-serif;
            background-color: #f8f9fa;
        }
        .title {
            font-family: "Playwrite CU", cursive;
            color: #ff6b6b;
        }
        .cart-item {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            transition: transform 0.3s ease;
        }
        .cart-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 6px rgba(0,0,0,0.3);
        }
        @media (max-width: 991px) {
            .navbar-text {
                order: -1;
                width: 100%;
                text-align: center;
                margin-bottom: 10px;
            }
        }
    </style>
</head>
<body>
<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
        <a class="navbar-brand" href="/"><h3 class="title mb-0">food express</h3></a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse justify-content-between" id="navbarNavAltMarkup">
            <div class="navbar-nav"></div>
            <div class="navbar-text mx-auto">
                <h4 class="mb-0">Hello, <%= name %> </h4>
            </div>
            <div class="navbar-nav">
                <a class="nav-link" href="/dashboard"><button class="btn btn-primary me-2">back to dashboard</button></a>
                <a class="nav-link" href="/orders"><button class="btn btn-primary me-2">Orders</button></a>
                <a class="nav-link" href="/logout"><button class="btn btn-danger">Logout</button></a>
            </div>
        </div>
    </div>
</nav>

<div class="container mt-4">
    <h2 class="mb-4">Your Cart</h2>
    <div id="cartItems" class="row g-4">
        <!-- Cart items will be populated here -->
    </div>
    <div id="cartTotal" class="mt-4">
        <!-- Total will be displayed here -->
    </div>
    <div class="mt-4">
        <button id="checkoutBtn" class="btn btn-success btn-lg" onclick="checkout()">Proceed to Checkout</button>
    </div>
</div>

<script>
    let totalAmount;
    async function fetchCartItems() {
        try {
            const response = await axios.get('/getCartdetails');
            const cartItems = response.data;
            console.log(cartItems);
            let str = '';
            let total = 0;

            cartItems.forEach((item) => {
                let disabled = item.quantity === 1 ? 'disabled' : '';
                let plusDisabled=item.quantity === 10 ? 'disabled' : '';
                total += item.itemPrice * item.quantity;
                str += `
            <div class="col-md-6 col-lg-4">
                <div class="cart-item p-3">
                    <h5>${item.itemName}</h5>
                    <p>Price: ₹${item.itemPrice}</p>
                     <div class="quantity-control mb-3">
                        <button class="btn btn-outline-secondary" onclick="updateQuantityMinus(${item.itemid})"  ${disabled}>-</button>
                        <span class="quantity-display">${item.quantity}</span>
                        <button class="btn btn-outline-secondary" onclick="updateQuantityADD(${item.itemid})" ${plusDisabled} >+</button>
                    </div>
                    <p>Subtotal: ₹${item.itemPrice * item.quantity}</p>
                    <button class="btn btn-danger btn-sm" onclick="removeItem(${item.cartID})">Remove</button>
                </div>
            </div>`;
            });

            document.getElementById('cartItems').innerHTML = str;
            totalAmount=total;
            document.getElementById('cartTotal').innerHTML = `<h4>Total: ₹${total.toFixed(2)}</h4>`;
        } catch (e) {
            console.error('Error in fetching the cart details: ' + e);
        }
    }

    function removeItem(itemID) {
        axios.post('/deleteItemsFromCart', { cartID:itemID })
            .then((res) => {
                console.log(res.data);
                if(res.data.message === 'done'){
                    fetchCartItems();
                }else{
                    alert('something went wrong')
                }

            })
            .catch(e => console.error('Error removing item from cart: ' + e));
    }

    function updateQuantityADD(itemID){
        axios.post('/editQuantity',{ itemID:itemID ,action: 'add' }).then((res)=>{
            console.log(res.data);
             if(res.data.message === 'done'){
                 fetchCartItems();
             }else {
                 alert('something went wrong');
             }
        }).catch((e)=>{
            console.error('error in adding quantities '+e);
        })
    }
    function updateQuantityMinus(itemID){
        axios.post('/editQuantity',{ itemID:itemID ,action: 'delete' }).then((res)=>{
            console.log(res.data);
            if(res.data.message === 'done'){
                fetchCartItems();
            }else {
                alert('something went wrong');
            }
        }).catch((e)=>{
            console.error('error in adding quantities '+e);
        })
    }

    function checkout() {
        axios.post('/checkout',{totalAmount:totalAmount}).then((res)=>{
            if(res.data.message === 'done'){
               console.log('done');
               alert('we have recived your order');
               fetchCartItems();
            }else{
                alert(res.data.message);
            }

        }).catch((e)=>{
            alert('internal server error');
           console.error("error in setting up the "+e);
        });
    }

    fetchCartItems();
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
</body>
</html>